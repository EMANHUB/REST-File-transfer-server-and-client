/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Cliente;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.ws.rs.client.Client;
import javax.ws.rs.client.Entity;
import javax.ws.rs.core.GenericType;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

/**
 *
 * @author Emanuel Rodrigues
 */
public class Principal extends javax.swing.JFrame {
    
    //variaveis

    private String baseUri;
    private String caminho;
    private Client cliente;
    private String nome;
    private login frame;
    private DefaultTreeModel model;

    /**
     * Creates new form Principal
     *
     * @param uri
     * @param caminho
     * @param cliente
     */
    public Principal(String uri, String caminho, Client cliente, String nome, login frame) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.baseUri = uri;
        this.caminho = caminho;
        this.cliente = cliente;
        this.frame = frame;
        this.nome = nome;
        this.model = new DefaultTreeModel(new DefaultMutableTreeNode("Pastas Partilhadas"));
        jTree1.setModel(model);
        jLBemvindo.setText("Bem-vindo, "+nome+"!");
        jTLog.setEditable(false);
        atualizarArvore();

    }
    
    //função que cria a arvore das directorias
    public void atualizarArvore() {
        ArrayList<Cliente> clientes = (ArrayList<Cliente>) getClientes();
        if (clientes != null) {
            DefaultTreeModel modelo = new DefaultTreeModel(new DefaultMutableTreeNode("Pastas Partilhadas"));
            DefaultMutableTreeNode no = (DefaultMutableTreeNode) modelo.getRoot();
            jTree1.setModel(modelo);
            for (Cliente x : clientes) {
                if (x.getNome().equals(nome)) {
                    DefaultMutableTreeNode treeNode = new DefaultMutableTreeNode("Meus Ficheiros");
                    if (x.getFicheiros() != null) {
                        for (String file : x.getFicheiros()) {
                            treeNode.add(new DefaultMutableTreeNode(file));
                        }
                        
                    }
                    no.add(treeNode);
                }

            }
            for (Cliente x : clientes) {
                if (x.getNome().equals(nome))continue;
                DefaultMutableTreeNode treeNode = new DefaultMutableTreeNode(x.getNome());
                if (x.getFicheiros() != null) {
                    for (String file : x.getFicheiros()) {
                        treeNode.add(new DefaultMutableTreeNode(file));
                    }
                    no.add(treeNode);
                }

            }
            modelo.reload(no);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTLog = new javax.swing.JTextArea();
        jBDownload = new javax.swing.JButton();
        jBSair = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jBRefresh = new javax.swing.JButton();
        jLBemvindo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ficheiros Partilhados");

        jTLog.setColumns(20);
        jTLog.setRows(5);
        jScrollPane1.setViewportView(jTLog);

        jBDownload.setText("Download");
        jBDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDownloadActionPerformed(evt);
            }
        });

        jBSair.setText("Sair");
        jBSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSairActionPerformed(evt);
            }
        });

        jLabel1.setText("Log:");

        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(new javax.swing.tree.DefaultMutableTreeNode("Pastas Partilhadas")));
        jScrollPane2.setViewportView(jTree1);

        jBRefresh.setText("Atualizar");
        jBRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBDownload)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBSair))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBRefresh)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLBemvindo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLBemvindo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBRefresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBDownload)
                    .addComponent(jBSair))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //função que obtem os clientes para listar as suas diretorias na arvore
    public List<Cliente> getClientes() {
        Response resultado = cliente.target(baseUri)
                .request()
                .accept(MediaType.APPLICATION_XML)
                .get();
        if (resultado.getStatus() == 200) {
            List<Cliente> lista = resultado.readEntity(new GenericType<List<Cliente>>() {
            });
            if (lista.isEmpty()) {
                return null;
            }
            return lista;
        } else {
            return null;
        }

    }
    
    //ação do botao download
    private void jBDownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDownloadActionPerformed
        // TODO add your handling code here:
        DefaultMutableTreeNode selectedNode
                = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
        if (selectedNode == null) {
            JOptionPane.showMessageDialog(this, "Não selecionou nada!");
        } else if (selectedNode.toString().equals("Meus Ficheiros")) {
            JOptionPane.showMessageDialog(this, "Selecionou a sua pasta selecione um ficheiro dos outros clientes!");
        } else if (selectedNode.toString().equals("Pastas Partilhadas")) {
            JOptionPane.showMessageDialog(this, "Selecionou a pasta tem de selecionar um ficheiro!");
        } else if (selectedNode.getParent().toString().equals("Pastas Partilhadas")) {
            JOptionPane.showMessageDialog(this, "Selecionou um cliente não um ficheiro! Selecione um ficheiro!");
        } else if (selectedNode.getParent().toString().equals("Meus Ficheiros")) {
            JOptionPane.showMessageDialog(this, "Não pode efetuar download dos seus próprios ficheiros!");
        } else {
            Response resultado = cliente.target(baseUri.replace("Clientes","Transferencias"))
                    .path(selectedNode.getParent().toString())
                    .request()
                    .accept(MediaType.APPLICATION_XML)
                    .get();
            if (resultado.getStatus() == 200) {
                Cliente cli = resultado.readEntity(Cliente.class);
                Response resultado2 = cliente.target(baseUri.replace("Clientes","Transferencias"))
                        .path(nome)
                        .request()
                        .accept(MediaType.APPLICATION_XML)
                        .get();
                if (resultado.getStatus() == 200) {
                    Cliente eu = resultado2.readEntity(Cliente.class);
                    Transferencia t = new Transferencia(eu.getNome(), cli.getNome());
                    t.setNome(selectedNode.toString());
                    Response resultado3 = cliente.target(baseUri.replace("Clientes","Transferencias"))
                            .path("transferencias")
                            .request()
                            .accept(MediaType.APPLICATION_XML)
                            .post(Entity.xml(t));
                    if (resultado3.getStatus() == 200) {
                        System.out.println("Pedido sucesso!");
                    } else {
                        System.out.println("fail!");
                    }

                }

            }
        }

    }//GEN-LAST:event_jBDownloadActionPerformed

    //função para atualizar o texto do log
    public void log(String lista) {
        if (lista != null) {
            jTLog.append(lista);
        }
    }

    //Ação do botao sair
    private void jBSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSairActionPerformed
        // TODO add your handling code here:
        frame.terminarSessao();
        frame.setVisible(true);
        Response resultado = cliente.target(baseUri)
                .path(nome)
                .request()
                .accept(MediaType.APPLICATION_XML)
                .delete();
        this.dispose();

    }//GEN-LAST:event_jBSairActionPerformed
    
    //ação do botao atualizar
    private void jBRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRefreshActionPerformed
        // TODO add your handling code here:
        atualizarArvore();
    }//GEN-LAST:event_jBRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBDownload;
    private javax.swing.JButton jBRefresh;
    private javax.swing.JButton jBSair;
    private javax.swing.JLabel jLBemvindo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTLog;
    private javax.swing.tree.DefaultMutableTreeNode treeNode1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
